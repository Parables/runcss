{"version":3,"file":"runcss.esm.js","sources":["../src/runcss.js"],"sourcesContent":["\r\nconst elementClassesCache = new Map()\r\nconst classesCache = new Map()\r\n\r\nconst styleElement = document.createElement('style')\r\ndocument.head.appendChild(styleElement)\r\nlet sheet = styleElement.sheet\r\n\r\nconst media = new Map([\r\n  ['sm', sheet.cssRules[sheet.insertRule('@media(min-width:640px){}', sheet.cssRules.length)]],\r\n  ['md', sheet.cssRules[sheet.insertRule('@media(min-width:768px){}', sheet.cssRules.length)]],\r\n  ['lg', sheet.cssRules[sheet.insertRule('@media(min-width:1024px){}', sheet.cssRules.length)]],\r\n  ['xl', sheet.cssRules[sheet.insertRule('@media(min-width:1280px){}', sheet.cssRules.length)]]\r\n])\r\n\r\nlet cls\r\n\r\nexport function processClasses (classes) {\r\n  if (elementClassesCache.has(classes)) {\r\n    return\r\n  }\r\n  elementClassesCache.set(classes, true)\r\n  classes = classes.replace(/\\s\\s+/g, ' ').split(' ')\r\n  for (cls of classes) {\r\n    if (classesCache.has(cls)) {\r\n      continue\r\n    }\r\n    processClass()\r\n    classesCache.set(cls, true)\r\n  }\r\n}\r\n\r\nconst formatters = new Map([\r\n  ['p', 'padding'],\r\n  ['m', 'margin'],\r\n  ['h', 'height'],\r\n  ['z', 'z-index'],\r\n  ['w', 'width']\r\n])\r\n\r\nconst positions = new Map([\r\n  ['t', '-top'],\r\n  ['b', '-bottom'],\r\n  ['l', '-left'],\r\n  ['r', '-right']\r\n])\r\n\r\nconst classNames = new Map([\r\n  ['container', () => {\r\n    setRule('width:100%')\r\n    const m = ['640px', '768px', '1024px', '1280px']\r\n    media.values().forEach((s, index) => {\r\n      sheet = s\r\n      setRule('max-width:' + m[index])\r\n    })\r\n  }],\r\n  ['clearfix', () => {\r\n    originalClass = 'clearfix::after'\r\n    setRule('content:\"\";display:table;clear:both;')\r\n  }]\r\n])\r\n\r\nconst split = (s) => s.split(',')\r\n\r\n// example: object-left-bottom -> object-position: left bottom\r\nconst convertClasses1 = (cName, value) => {\r\n  const hPos = cName.indexOf('-') + 1\r\n  classNames.set(cName, cName.slice(0, hPos) + value + ':' + cName.slice(hPos).replace('-', ' '))\r\n}\r\n\r\n// direct map from class to values\r\nfor (const c of split('box-border|box-sizing:border-box,box-content|box-sizing:content-box,hidden|display:none,object-scale-down|object-fit:scale-down,scrolling-touch|-webkit-overflow-scrolling:touch,scrolling-auto|-webkit-overflow-scrolling:auto,visible|visibility:visible,invisible|visibility:hidden,flex-row|flex-direction:row,flex-row-reverse|flex-direction:row-reverse,flex-col|flex-direction:column,flex-col-reverse|flex-direction:column-reverse,flex-no-wrap|flex-wrap:nowrap,flex-wrap|flex-wrap:wrap,flex-wrap-reverse|flex-wrap:wrap-reverse,items-stretch|align-items:stretch,items-start|align-items:flex-start,items-center|align-items:center,items-end|align-items:flex-end,items-baseline|align-items:baseline,content-start|align-content:flex-start,content-center|align-content:center,content-end|align-content:flex-end,content-between|align-content:space-between,content-around|align-content:space-around,self-auto|align-self:auto,self-start|align-self:flex-start,self-center|align-self:center,self-end|align-self:flex-end,self-stretch|align-self:stretch')) {\r\n  classNames.set(...c.split('|'))\r\n}\r\n\r\n// for (const c of []) {\r\n\r\nfor (const c of split('object-contain,object-cover,object-fill,object-none,object-bottom')) {\r\n  convertClasses1(c, 'fit')\r\n}\r\n\r\nfor (const c of split('object-bottom,object-center,object-left,object-left-bottom,object-left-top,object-right,object-right-bottom,object-right-top,object-top')) {\r\n  convertClasses1(c, 'position')\r\n}\r\n\r\n// class to value\r\nfor (const c of split('float-right,float-left,float-none,clear-left,clear-right,clear-both,clear-none')) {\r\n  classNames.set(c, c.replace('-', ':'))\r\n}\r\n\r\n// display\r\nfor (const c of split('block,flow-root,inline-block,inline,flex,grid,inline-grid,table,table-caption,table-cell,table-column,table-column-group,table-footer-group,table-header-group,table-row-group,table-row')) {\r\n  classNames.set(c, 'display:' + c)\r\n}\r\n\r\n// position\r\nfor (const c of split('static,fixed,absolute,relative,sticky')) {\r\n  classNames.set(c, 'position:' + c)\r\n}\r\n\r\n/*\r\nconst processClass1 = (value) => {\r\n  const hPos = cls.indexOf('-') + 1\r\n  setRule(cls.slice(0, hPos) + value + ':' + cls.slice(hPos).replace('-', ' '))\r\n}\r\n*/\r\n\r\nconst cls2process = new Map([\r\n  ['overflow', () => {\r\n    setRule(firstPart + '-' + parts[1] + ':' + parts[2])\r\n  }]\r\n])\r\n\r\nlet parts\r\nlet firstPart\r\nlet pseudoClasses\r\nlet negative\r\nlet originalClass\r\n\r\nfunction processClass () {\r\n  sheet = styleElement.sheet\r\n  firstPart = undefined\r\n  pseudoClasses = undefined\r\n  negative = ''\r\n  originalClass = cls\r\n  parts = cls.split(':')\r\n  cls = parts[parts.length - 1]\r\n  parts = parts.slice(0, -1)\r\n  for (const part of parts) {\r\n    if (media.has(part)) {\r\n      sheet = media.get(part)\r\n      continue\r\n    }\r\n    pseudoClasses.push(part)\r\n  }\r\n  if (cls[0] === '-') {\r\n    negative = '-'\r\n    cls = cls.slice(1)\r\n  }\r\n  if (cls.length < 3) {\r\n    notFound()\r\n    return\r\n  }\r\n  parts = cls.split('-')\r\n  firstPart = parts[0]\r\n  if (firstPart.length < 3 && firstPart !== 'bg') {\r\n    formatClass()\r\n    return\r\n  }\r\n  const classValue = classNames.get(cls)\r\n  if (classValue !== undefined) {\r\n    if (typeof classValue === 'function') {\r\n      classValue()\r\n    } else {\r\n      setRule(classValue)\r\n    }\r\n    return\r\n  }\r\n  if (parts.length < 2) {\r\n    notFound()\r\n    return\r\n  }\r\n  const process = cls2process.get(firstPart)\r\n  if (typeof process === 'function') {\r\n    process()\r\n    return\r\n  }\r\n  notFound()\r\n}\r\n\r\nfunction formatClass () {\r\n  const secondPart = parts[1]\r\n  let value\r\n  if (secondPart === 'px') {\r\n    value = `${negative}1px`\r\n  } else if (secondPart === 'full') {\r\n    value = '100%'\r\n  } else if (secondPart === 'screen') {\r\n    if (firstPart === 'w') {\r\n      value = '100vw'\r\n    } else if (firstPart === 'h') {\r\n      value = '100vh'\r\n    } else {\r\n      notFound()\r\n      return\r\n    }\r\n  } else if (!isNaN(secondPart)) { // is a number\r\n    value = `${negative}${Number(secondPart) * 0.25}rem`\r\n  } else if (secondPart.indexOf('/') > -1) {\r\n    let [top, bottom] = secondPart.split('/')\r\n    top = Number(top)\r\n    bottom = Number(bottom)\r\n    if (isNaN(top) || isNaN(bottom)) {\r\n      notFound()\r\n      return\r\n    }\r\n    value = `${negative}${(Number(top) / Number(bottom)).toFixed(6)}%`\r\n  } else {\r\n    value = `${negative}${secondPart}`\r\n  }\r\n\r\n  const basicPart = formatters.get(firstPart[0])\r\n  if (basicPart === undefined) {\r\n    notFound()\r\n    return\r\n  }\r\n  if (firstPart.length > 1) {\r\n    if (firstPart[1] === 'x') {\r\n      setRule(basicPart + '-right:' + value)\r\n      setRule(basicPart + '-left:' + value)\r\n    } else if (firstPart[1] === 'y') {\r\n      setRule(basicPart + '-top:' + value)\r\n      setRule(basicPart + '-bottom:' + value)\r\n    } else {\r\n      const position = positions.get(firstPart[1])\r\n      if (position === undefined) {\r\n        notFound()\r\n        return\r\n      }\r\n      setRule(basicPart + position + value)\r\n    }\r\n  } else {\r\n    setRule(basicPart + ':' + value)\r\n  }\r\n}\r\n\r\nfor (const s of document.styleSheets) {\r\n  console.log(s)\r\n}\r\n\r\nfunction notFound () {\r\n  if (sheet === styleElement.sheet) {\r\n    return\r\n  }\r\n  for (const s of document.styleSheets) {\r\n    console.log(s)\r\n    for (const rule of s.cssRules) {\r\n      // eslint-disable-next-line no-undef\r\n      if (rule.type === CSSRule.STYLE_RULE) {\r\n        if (rule.selectorText.split(',').map((item) => item.trim()).includes('.' + cls)) {\r\n          cls = originalClass.replace(/[.:]/, '\\\\$&')\r\n          console.log(`.${cls}${rule.cssText.slice(rule.cssText.indexOf('{'))}`)\r\n          sheet.insertRule(`.${cls}${rule.cssText.slice(rule.cssText.indexOf('{'))}`, sheet.length)\r\n          return\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction setRule (t) {\r\n  cls = originalClass.replace(/[.:]/, '\\\\$&')\r\n  console.log(`.${cls}{${t}}`)\r\n  sheet.insertRule(`.${cls}{${t}}`, sheet.length)\r\n}\r\n"],"names":["elementClassesCache","Map","classesCache","styleElement","document","createElement","head","appendChild","cls","sheet","media","cssRules","insertRule","length","processClasses","classes","has","set","replace","split","processClass","formatters","positions","classNames","setRule","m","values","forEach","s","index","originalClass","convertClasses1","cName","value","hPos","indexOf","slice","c","parts","firstPart","negative","cls2process","undefined","part","get","push","notFound","secondPart","isNaN","top","bottom","Number","toFixed","basicPart","position","formatClass","classValue","process","styleSheets","console","log","rule","type","CSSRule","STYLE_RULE","selectorText","map","item","trim","includes","cssText","t"],"mappings":"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"}